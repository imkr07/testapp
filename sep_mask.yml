- name: Separate and process XML files
  hosts: fbservers
  tags: masking
  vars:
    source_dirs:
      - "/colt/devops/config/pre-deployment"
      - "/colt/devops/config/post-deployment"
    destination_dirs:
      - "/colt/devops/config/masked_pre-deployment"
      - "/colt/devops/config/masked_post-deployment"

  tasks:
    - name: Create directories in destination
      file:
        path: "{{ item.dest }}/{{ sub_dir }}"
        state: directory
        mode: '0755'
      with_items:
        - { src: "{{ source_dirs[0] }}", dest: "{{ destination_dirs[0] }}" }
        - { src: "{{ source_dirs[1] }}", dest: "{{ destination_dirs[1] }}" }
      with_nested:
        - [ 'properties', 'camel' ]

    - name: Find -properties.xml files
      find:
        paths: "{{ item }}"
        patterns: "*-properties.xml"
      register: properties_files
      with_items: "{{ source_dirs }}"

    - name: Find camel.xml files
      find:
        paths: "{{ item }}"
        patterns: "*camel*.xml"
      register: camel_files
      with_items: "{{ source_dirs }}"

    - name: Copy -properties.xml files to properties directory
      shell: cp -p "{{ item.item.path }}" "{{ destination_dirs[item.ansible_loop.index0] }}/properties/{{ item.item.path | basename }}"
      with_items: "{{ properties_files.results }}"
      ignore_errors: yes

    - name: Copy camel.xml files to camel directory
      shell: cp -p "{{ item.item.path }}" "{{ destination_dirs[item.ansible_loop.index0] }}/camel/{{ item.item.path | basename }}"
      with_items: "{{ camel_files.results }}"
      ignore_errors: yes

    - name: Mask passwords in properties files
      shell: |
        cd {{ item }}/properties
        for file in *-properties.xml; do
          cat "$file" | sed 's/\s\s*/ /g' | \
          sed -E 's/(<entry[^>]* name="[^"]*assword"[^>]* value=")[^"]*("[^>]*>)/\1*********\2/g' | \
          sed -E 's/(<[^>]* password="|password=&quot;)[^"]*("[^>]*>)/\1******\2/g' | \
          sed -E 's/&quot;/"/g' > "$file.tmp" && mv "$file.tmp" "$file"
        done
      args:
        executable: /bin/bash
      with_items: "{{ destination_dirs }}"
      ignore_errors: yes